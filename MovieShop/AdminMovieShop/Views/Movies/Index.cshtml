@using DomainModel
@model IEnumerable<DomainModel.Movie>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<table class="table table-striped table-condensed">
    <thead>
        <tr>
            <th>Id</th>
            <th>Title</th>
            <th>Year</th>
            <th>Price</th>
            <th>Picture Path</th>
            <th>TrailerURL</th>
            <th>Genre</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.Id</td>
                <td>@item.Title</td>
                <td>@item.Year</td>
                <td>@item.Price</td>
                <td>@item.PicturePath</td>
                <td>@item.TrailerURL</td>
                <td>@item.Genre.Name</td>
                <td>@Html.ActionLink("Delete", "Delete", new { Id = @item.Id })
                    @Html.ActionLink("Edit", "Edit", new { movieId = @item.Id })</td>
            </tr>
        }
    </tbody>
</table>
@Html.ActionLink("Add new Movie", "Create", null, new { @class = "btn btn-success" } )
@Html.ActionLink("Manage Genres", "Create", new { Controller = "Genre" }, new { @class = "btn btn-success" })
@Html.ActionLink("View Orders", "Index", new { Controller = "Order" }, new { @class = "btn btn-success" })
@Html.ActionLink("View Customers", "Index", new { Controller = "Customer" }, new { @class = "btn btn-success" })

